{
  "fileName": "MasterProxy.sol",
  "contractName": "MasterProxy",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./ProxyBase.sol\";\n\n/**\n * @title MasterProxy\n * @dev The default target to which UniversalProxy delegates execution.\n *      Implements various administrative functions, allowing a controller\n *      address to selectively upgrade parts of the application.\n */\ncontract MasterProxy is ProxyBase {\n\n  /**\n   * @dev Only the controller address can access functions with this modifier\n   */\n  modifier onlyController {\n    require(msg.sender == controller);\n    _;\n  }\n\n  /**\n   * @dev Fallback function. Delegates execution to the correct target, based\n   *      on the function selector included with the transaction\n   */\n  function () external payable {\n    require(!paused, \"Contract is paused\");\n\n    // Get target from msg.sig\n    address target = targets[PROXY_TARGETS][msg.sig];\n    require(target != 0, \"Invalid execution target\");\n    \n    assembly {\n      // Copy all calldata to mem @ 0x00\n      calldatacopy(0, 0, calldatasize)\n\n      // Delegatecall the target. Copy its returndata\n      let res := delegatecall(gas, target, 0, calldatasize, 0, 0)\n      returndatacopy(0, 0, returndatasize)\n\n      // If we got an error, revert data to sender. Otherwise, return data\n      switch res\n      case 0 { revert(0, returndatasize) }\n      default { return(0, returndatasize) }\n    }\n  }\n\n  /**\n   * @dev Allows the controller to transfer permissions to a new address\n   * @param newController The address to which permissions will be transferred\n   */\n  function changeController(address newController) external onlyController {\n    controller = newController;\n  }\n\n  /**\n   * @dev Allows the controller to flip the pause status of the application\n   */\n  function pause() external onlyController {\n    paused = !paused; // Flips the bool on or off\n  }\n\n  /**\n   * @dev Allows the controller to set a new master address. Note that *this contract*\n   *      is deployed at the master address by default.\n   * @param newMaster The new default delegate target for the universal proxy\n   */\n  function setMaster(address newMaster) external onlyController {\n    require(isContract(newMaster), \"Invalid master address\");\n    master = newMaster;\n  }\n\n  /**\n   * @dev Returns the master address of the universal proxy that is calling this contract.\n   * @return The master address of the universal proxy\n   */\n  function getMaster() external view returns (address) {\n    return master;\n  }\n\n  /** \n   * @dev Returns the controller address of the universal proxy that is calling this contract.\n   * @return The controller address of the universal proxy\n   */\n  function getController() external view returns (address) {\n    return controller;\n  }\n\n  /**\n   * @dev Allows the controller to set a delegate target for a function selector\n   * @param functionSel The function selector for which routing is adjusted\n   * @param newTarget The new destination to which calls with the selector will be routed\n   */\n  function setTarget(bytes4 functionSel, address newTarget) external onlyController {\n    require(isContract(newTarget), \"Invalid target address\");\n    targets[PROXY_TARGETS][functionSel] = newTarget;\n  }\n\n  /**\n   * @dev Returns the address to which execution is delegated for a given function selector\n   * @param functionSel The function selector to check\n   * @return address The address to which execution will be delegated for the selector\n   */\n  function getTarget(bytes4 functionSel) external view returns (address) {\n    return targets[PROXY_TARGETS][functionSel];\n  }\n\n  /**\n   * @dev Returns whether or not the address contains code. Note that contracts have\n   *      extcodesize 0 during construction.\n   * @param a The address to check\n   * @return valid True if the address has a nonzero extcodesize\n   */\n\n  function isContract(address a) internal view returns (bool valid) {\n    assembly { valid := extcodesize(a) }\n  }\n}\n",
  "sourcePath": "contracts/proxy/MasterProxy.sol",
  "sourceMap": "295:3582:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:3582:6;;;;;;;",
  "deployedSourceMap": "295:3582:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:14;702:6;;;;;;;;;;;701:7;693:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:7;:22;153:26:7;;;;;;;;;;;;;;;;;;;786:22:6;;;;;;;;;;;;;;;;;:31;809:7;;;;786:31;;;;;;;;;;;;;;;;;;;;;;;;;;;769:48;;841:1;831:6;:11;;;;823:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;959:12;956:1;953;940:32;1091:1;1088;1074:12;1071:1;1063:6;1058:3;1045:48;1121:14;1118:1;1115;1100:36;1226:3;1241:1;1236:36;;;;1299:14;1296:1;1289:25;1236:36;1255:14;1252:1;1245:25;2940:202;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2940:202:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2029:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2029:153:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2592:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;3392:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3392:124:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1494:110:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;2344:77;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2344:77:6;;;;;;;;;;;;;;;;;;;;;;;;;;;1696:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1696:96:6;;;;;;2940:202;476:10;;;;;;;;;;;462:24;;:10;:24;;;454:33;;;;;;;;3036:21;3047:9;3036:10;:21::i;:::-;3028:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:9;3090:7;:22;153:26:7;;;;;;;;;;;;;;;;;;;3090:22:6;;;;;;;;;;;;;;;;;:35;3113:11;3090:35;;;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;2940:202;;:::o;2029:153::-;476:10;;;;;;;;;;;462:24;;:10;:24;;;454:33;;;;;;;;2105:21;2116:9;2105:10;:21::i;:::-;2097:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:9;2159:6;;:18;;;;;;;;;;;;;;;;;;2029:153;:::o;2592:85::-;2640:7;2662:10;;;;;;;;;;;2655:17;;2592:85;:::o;3392:124::-;3454:7;3476;:22;153:26:7;;;;;;;;;;;;;;;;;;;3476:22:6;;;;;;;;;;;;;;;;;:35;3499:11;3476:35;;;;;;;;;;;;;;;;;;;;;;;;;;;3469:42;;3392:124;;;:::o;1494:110::-;476:10;;;;;;;;;;;462:24;;:10;:24;;;454:33;;;;;;;;1586:13;1573:10;;:26;;;;;;;;;;;;;;;;;;1494:110;:::o;2344:77::-;2388:7;2410:6;;;;;;;;;;;2403:13;;2344:77;:::o;1696:96::-;476:10;;;;;;;;;;;462:24;;:10;:24;;;454:33;;;;;;;;1753:6;;;;;;;;;;;1752:7;1743:6;;:16;;;;;;;;;;;;;;;;;;1696:96::o;3763:112::-;3817:10;3867:1;3855:14;3846:23;;3844:27;;;:::o",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "functionSel",
          "type": "bytes4"
        },
        {
          "name": "newTarget",
          "type": "address"
        }
      ],
      "name": "setTarget",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newMaster",
          "type": "address"
        }
      ],
      "name": "setMaster",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getController",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "functionSel",
          "type": "bytes4"
        }
      ],
      "name": "getTarget",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newController",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaster",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "ast": {
    "absolutePath": "contracts/proxy/MasterProxy.sol",
    "exportedSymbols": {
      "MasterProxy": [
        2056
      ]
    },
    "id": 2057,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1908,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "contracts/proxy/ProxyBase.sol",
        "file": "./ProxyBase.sol",
        "id": 1909,
        "nodeType": "ImportDirective",
        "scope": 2057,
        "sourceUnit": 2077,
        "src": "26:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1910,
              "name": "ProxyBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2076,
              "src": "319:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProxyBase_$2076",
                "typeString": "contract ProxyBase"
              }
            },
            "id": 1911,
            "nodeType": "InheritanceSpecifier",
            "src": "319:9:6"
          }
        ],
        "contractDependencies": [
          2076
        ],
        "contractKind": "contract",
        "documentation": "@title MasterProxy\n@dev The default target to which UniversalProxy delegates execution.\n     Implements various administrative functions, allowing a controller\n     address to selectively upgrade parts of the application.",
        "fullyImplemented": true,
        "id": 2056,
        "linearizedBaseContracts": [
          2056,
          2076
        ],
        "name": "MasterProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1921,
              "nodeType": "Block",
              "src": "448:51:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1914,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2162,
                            "src": "462:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "462:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1916,
                          "name": "controller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2067,
                          "src": "476:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "462:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2165,
                        2166
                      ],
                      "referencedDeclaration": 2165,
                      "src": "454:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "454:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1919,
                  "nodeType": "ExpressionStatement",
                  "src": "454:33:6"
                },
                {
                  "id": 1920,
                  "nodeType": "PlaceholderStatement",
                  "src": "493:1:6"
                }
              ]
            },
            "documentation": "@dev Only the controller address can access functions with this modifier",
            "id": 1922,
            "name": "onlyController",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:0:6"
            },
            "src": "424:75:6",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1948,
              "nodeType": "Block",
              "src": "687:639:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "701:7:6",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 1926,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2069,
                          "src": "702:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e747261637420697320706175736564",
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "710:20:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
                          "typeString": "literal_string \"Contract is paused\""
                        },
                        "value": "Contract is paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
                          "typeString": "literal_string \"Contract is paused\""
                        }
                      ],
                      "id": 1925,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2165,
                        2166
                      ],
                      "referencedDeclaration": 2166,
                      "src": "693:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "693:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1930,
                  "nodeType": "ExpressionStatement",
                  "src": "693:38:6"
                },
                {
                  "assignments": [
                    1932
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1932,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 1949,
                      "src": "769:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1931,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "769:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1939,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1933,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "786:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes4_$_t_address_$_$",
                          "typeString": "mapping(bytes32 => mapping(bytes4 => address))"
                        }
                      },
                      "id": 1935,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1934,
                        "name": "PROXY_TARGETS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2063,
                        "src": "794:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "786:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
                        "typeString": "mapping(bytes4 => address)"
                      }
                    },
                    "id": 1938,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1936,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2162,
                        "src": "809:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "809:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "786:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "769:48:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1941,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1932,
                          "src": "831:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "841:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "831:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420657865637574696f6e20746172676574",
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "844:26:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38bb5bf296801e09549a84b420b9c7a7dc672739fccc8a0c6fff2969e2147a61",
                          "typeString": "literal_string \"Invalid execution target\""
                        },
                        "value": "Invalid execution target"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38bb5bf296801e09549a84b420b9c7a7dc672739fccc8a0c6fff2969e2147a61",
                          "typeString": "literal_string \"Invalid execution target\""
                        }
                      ],
                      "id": 1940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2165,
                        2166
                      ],
                      "referencedDeclaration": 2166,
                      "src": "823:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:48:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1946,
                  "nodeType": "ExpressionStatement",
                  "src": "823:48:6"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 1932,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1063:6:6",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 1947,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    calldatacopy(0, 0, calldatasize())\n    let res := delegatecall(gas(), target, 0, calldatasize(), 0, 0)\n    returndatacopy(0, 0, returndatasize())\n    switch res\n    case 0 {\n        revert(0, returndatasize())\n    }\n    default {\n        return(0, returndatasize())\n    }\n}",
                  "src": "882:444:6"
                }
              ]
            },
            "documentation": "@dev Fallback function. Delegates execution to the correct target, based\n     on the function selector included with the transaction",
            "id": 1949,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "667:2:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 1924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "687:0:6"
            },
            "scope": 2056,
            "src": "658:668:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1960,
              "nodeType": "Block",
              "src": "1567:37:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1956,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2067,
                      "src": "1573:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1957,
                      "name": "newController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1951,
                      "src": "1586:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1573:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1959,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:26:6"
                }
              ]
            },
            "documentation": "@dev Allows the controller to transfer permissions to a new address\n@param newController The address to which permissions will be transferred",
            "id": 1961,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1954,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1953,
                  "name": "onlyController",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1922,
                  "src": "1552:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1552:14:6"
              }
            ],
            "name": "changeController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1951,
                  "name": "newController",
                  "nodeType": "VariableDeclaration",
                  "scope": 1961,
                  "src": "1520:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1519:23:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:0:6"
            },
            "scope": 2056,
            "src": "1494:110:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1971,
              "nodeType": "Block",
              "src": "1737:55:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1966,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2069,
                      "src": "1743:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1752:7:6",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1967,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2069,
                        "src": "1753:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1743:16:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1970,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:16:6"
                }
              ]
            },
            "documentation": "@dev Allows the controller to flip the pause status of the application",
            "id": 1972,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1964,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1963,
                  "name": "onlyController",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1922,
                  "src": "1722:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1722:14:6"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1710:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:0:6"
            },
            "scope": 2056,
            "src": "1696:96:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1990,
              "nodeType": "Block",
              "src": "2091:91:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1981,
                            "name": "newMaster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1974,
                            "src": "2116:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1980,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "2105:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2105:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206d61737465722061646472657373",
                        "id": 1983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2128:24:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3672f019d108ee6b296646b1fad2bd021deea77ff3f10d3cd4ae161e841803b3",
                          "typeString": "literal_string \"Invalid master address\""
                        },
                        "value": "Invalid master address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3672f019d108ee6b296646b1fad2bd021deea77ff3f10d3cd4ae161e841803b3",
                          "typeString": "literal_string \"Invalid master address\""
                        }
                      ],
                      "id": 1979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2165,
                        2166
                      ],
                      "referencedDeclaration": 2166,
                      "src": "2097:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2097:56:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1985,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:56:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1986,
                      "name": "master",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2065,
                      "src": "2159:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1987,
                      "name": "newMaster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1974,
                      "src": "2168:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2159:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1989,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:18:6"
                }
              ]
            },
            "documentation": "@dev Allows the controller to set a new master address. Note that *this contract*\n     is deployed at the master address by default.\n@param newMaster The new default delegate target for the universal proxy",
            "id": 1991,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1977,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1976,
                  "name": "onlyController",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1922,
                  "src": "2076:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2076:14:6"
              }
            ],
            "name": "setMaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1974,
                  "name": "newMaster",
                  "nodeType": "VariableDeclaration",
                  "scope": 1991,
                  "src": "2048:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2048:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2047:19:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2091:0:6"
            },
            "scope": 2056,
            "src": "2029:153:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1998,
              "nodeType": "Block",
              "src": "2397:24:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1996,
                    "name": "master",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2065,
                    "src": "2410:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1995,
                  "id": 1997,
                  "nodeType": "Return",
                  "src": "2403:13:6"
                }
              ]
            },
            "documentation": "@dev Returns the master address of the universal proxy that is calling this contract.\n@return The master address of the universal proxy",
            "id": 1999,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMaster",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2362:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 1995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1994,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "2388:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2388:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2387:9:6"
            },
            "scope": 2056,
            "src": "2344:77:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2006,
              "nodeType": "Block",
              "src": "2649:28:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2004,
                    "name": "controller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2067,
                    "src": "2662:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2003,
                  "id": 2005,
                  "nodeType": "Return",
                  "src": "2655:17:6"
                }
              ]
            },
            "documentation": "@dev Returns the controller address of the universal proxy that is calling this contract.\n@return The controller address of the universal proxy",
            "id": 2007,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getController",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2614:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2002,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2007,
                  "src": "2640:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2640:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2639:9:6"
            },
            "scope": 2056,
            "src": "2592:85:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2031,
              "nodeType": "Block",
              "src": "3022:120:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2018,
                            "name": "newTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2011,
                            "src": "3047:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2017,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2055,
                          "src": "3036:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 2019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3036:21:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964207461726765742061646472657373",
                        "id": 2020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3059:24:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556",
                          "typeString": "literal_string \"Invalid target address\""
                        },
                        "value": "Invalid target address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b65575796164a3c7aae80dfc69a8cd3954b642fb8be35a4dd5158f4ea357556",
                          "typeString": "literal_string \"Invalid target address\""
                        }
                      ],
                      "id": 2016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2165,
                        2166
                      ],
                      "referencedDeclaration": 2166,
                      "src": "3028:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3028:56:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2022,
                  "nodeType": "ExpressionStatement",
                  "src": "3028:56:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2023,
                          "name": "targets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2075,
                          "src": "3090:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes4_$_t_address_$_$",
                            "typeString": "mapping(bytes32 => mapping(bytes4 => address))"
                          }
                        },
                        "id": 2026,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2024,
                          "name": "PROXY_TARGETS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2063,
                          "src": "3098:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3090:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
                          "typeString": "mapping(bytes4 => address)"
                        }
                      },
                      "id": 2027,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2025,
                        "name": "functionSel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2009,
                        "src": "3113:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3090:35:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2028,
                      "name": "newTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2011,
                      "src": "3128:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3090:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2030,
                  "nodeType": "ExpressionStatement",
                  "src": "3090:47:6"
                }
              ]
            },
            "documentation": "@dev Allows the controller to set a delegate target for a function selector\n@param functionSel The function selector for which routing is adjusted\n@param newTarget The new destination to which calls with the selector will be routed",
            "id": 2032,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2014,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2013,
                  "name": "onlyController",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1922,
                  "src": "3007:14:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3007:14:6"
              }
            ],
            "name": "setTarget",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2009,
                  "name": "functionSel",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "2959:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2008,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2959:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2011,
                  "name": "newTarget",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "2979:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2979:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2958:39:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2015,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3022:0:6"
            },
            "scope": 2056,
            "src": "2940:202:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2045,
              "nodeType": "Block",
              "src": "3463:53:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2039,
                        "name": "targets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2075,
                        "src": "3476:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_bytes4_$_t_address_$_$",
                          "typeString": "mapping(bytes32 => mapping(bytes4 => address))"
                        }
                      },
                      "id": 2041,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2040,
                        "name": "PROXY_TARGETS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2063,
                        "src": "3484:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3476:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_address_$",
                        "typeString": "mapping(bytes4 => address)"
                      }
                    },
                    "id": 2043,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2042,
                      "name": "functionSel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2034,
                      "src": "3499:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3476:35:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2038,
                  "id": 2044,
                  "nodeType": "Return",
                  "src": "3469:42:6"
                }
              ]
            },
            "documentation": "@dev Returns the address to which execution is delegated for a given function selector\n@param functionSel The function selector to check\n@return address The address to which execution will be delegated for the selector",
            "id": 2046,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getTarget",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2034,
                  "name": "functionSel",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "3411:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2033,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3411:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3410:20:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2037,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "3454:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3454:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3453:9:6"
            },
            "scope": 2056,
            "src": "3392:124:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2054,
              "nodeType": "Block",
              "src": "3829:46:6",
              "statements": [
                {
                  "externalReferences": [
                    {
                      "valid": {
                        "declaration": 2051,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3846:5:6",
                        "valueSize": 1
                      }
                    },
                    {
                      "a": {
                        "declaration": 2048,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "3867:1:6",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 2053,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    valid := extcodesize(a)\n}",
                  "src": "3835:40:6"
                }
              ]
            },
            "documentation": "@dev Returns whether or not the address contains code. Note that contracts have\n     extcodesize 0 during construction.\n@param a The address to check\n@return valid True if the address has a nonzero extcodesize",
            "id": 2055,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "3783:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3783:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3782:11:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2051,
                  "name": "valid",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "3817:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2050,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3816:12:6"
            },
            "scope": 2056,
            "src": "3763:112:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2057,
        "src": "295:3582:6"
      }
    ],
    "src": "0:3878:6"
  },
  "bytecode": "0x608060405234801561001057600080fd5b50610a39806100206000396000f300608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806308af4b45146102a457806326fae0d3146103105780633018205f14610353578063374e4047146103aa5780633cebb823146104365780635a99719e146104795780638456cb59146104d0575b6000600160149054906101000a900460ff1615151561010a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b6002600060405180807f50524f58595f5441524745545300000000000000000000000000000000000000815250600d019050604051809103902060001916600019168152602001908152602001600020600080357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff161415151561027e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420657865637574696f6e20746172676574000000000000000081525060200191505060405180910390fd5b3660008037600080366000845af43d6000803e806000811461029f573d6000f35b3d6000fd5b3480156102b057600080fd5b5061030e60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104e7565b005b34801561031c57600080fd5b50610351600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a2565b005b34801561035f57600080fd5b506103686107be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103b657600080fd5b506103f460048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044257600080fd5b50610477600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b1565b005b34801561048557600080fd5b5061048e610951565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104dc57600080fd5b506104e561097a565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561054357600080fd5b61054c81610a02565b15156105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642074617267657420616464726573730000000000000000000081525060200191505060405180910390fd5b806002600060405180807f50524f58595f5441524745545300000000000000000000000000000000000000815250600d0190506040518091039020600019166000191681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106fe57600080fd5b61070781610a02565b151561077b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c6964206d617374657220616464726573730000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002600060405180807f50524f58595f5441524745545300000000000000000000000000000000000000815250600d0190506040518091039020600019166000191681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561090d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109d657600080fd5b600160149054906101000a900460ff1615600160146101000a81548160ff021916908315150217905550565b6000813b90509190505600a165627a7a7230582029e4ee7ee39ecd90aee0501c24a3aa0a87215408fb19d268cd5a4456b03632f20029",
  "deployedBytecode": "0x608060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806308af4b45146102a457806326fae0d3146103105780633018205f14610353578063374e4047146103aa5780633cebb823146104365780635a99719e146104795780638456cb59146104d0575b6000600160149054906101000a900460ff1615151561010a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f436f6e747261637420697320706175736564000000000000000000000000000081525060200191505060405180910390fd5b6002600060405180807f50524f58595f5441524745545300000000000000000000000000000000000000815250600d019050604051809103902060001916600019168152602001908152602001600020600080357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff161415151561027e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f496e76616c696420657865637574696f6e20746172676574000000000000000081525060200191505060405180910390fd5b3660008037600080366000845af43d6000803e806000811461029f573d6000f35b3d6000fd5b3480156102b057600080fd5b5061030e60048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104e7565b005b34801561031c57600080fd5b50610351600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a2565b005b34801561035f57600080fd5b506103686107be565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103b657600080fd5b506103f460048036038101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506107e8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561044257600080fd5b50610477600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108b1565b005b34801561048557600080fd5b5061048e610951565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104dc57600080fd5b506104e561097a565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561054357600080fd5b61054c81610a02565b15156105c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c69642074617267657420616464726573730000000000000000000081525060200191505060405180910390fd5b806002600060405180807f50524f58595f5441524745545300000000000000000000000000000000000000815250600d0190506040518091039020600019166000191681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106fe57600080fd5b61070781610a02565b151561077b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f496e76616c6964206d617374657220616464726573730000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002600060405180807f50524f58595f5441524745545300000000000000000000000000000000000000815250600d0190506040518091039020600019166000191681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561090d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109d657600080fd5b600160149054906101000a900460ff1615600160146101000a81548160ff021916908315150217905550565b6000813b90509190505600a165627a7a7230582029e4ee7ee39ecd90aee0501c24a3aa0a87215408fb19d268cd5a4456b03632f20029",
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "byzantium"
  }
}
